
<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Mods/basic robot/tutorial - Minetest Wiki</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":!1,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"d349ff1ff1433de9334a62be","wgCSPNonce":!1,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":!1,"wgNamespaceNumber":0,"wgPageName":"Mods/basic_robot/tutorial","wgTitle":"Mods/basic robot/tutorial","wgCurRevisionId":26316,"wgRevisionId":26316,"wgArticleId":4952,"wgIsArticle":!0,"wgIsRedirect":!1,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages with ignored display titles","Pages using deprecated source tags","Pages with syntax highlighting errors","Pages with broken file links","Mods"],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"Mods/basic_robot/tutorial","wgRelevantArticleId":4952,
"wgIsProbablyEditable":!1,"wgRelevantPageIsProbablyEditable":!1,"wgRestrictionEdit":[],"wgRestrictionMove":[]};RLSTATE={"site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.vector.styles.legacy":"ready","mediawiki.toc.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.startup","mediawiki.page.ready","mediawiki.toc","skins.vector.legacy.js"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@1hzgi",function($,jQuery,require,module){/*@nomin*/mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});
});});</script>
<link rel="stylesheet" href="/load.php?lang=en&amp;modules=ext.pygments%7Cmediawiki.toc.styles%7Cskins.vector.styles.legacy&amp;only=styles&amp;skin=vector"/>
<script async="" src="/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.35.3"/>
<link rel="shortcut icon" href="/favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="Minetest Wiki (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="//wiki.minetest.net/api.php?action=rsd"/>
<link rel="license" href="http://creativecommons.org/licenses/by-sa/3.0/"/>
<link rel="alternate" type="application/atom+xml" title="Minetest Wiki Atom feed" href="/index.php?title=Special:RecentChanges&amp;feed=atom"/>
<!--[if lt IE 9]><script src="/resources/lib/html5shiv/html5shiv.js"></script><![endif]-->
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Mods_basic_robot_tutorial rootpage-Mods skin-vector action-view skin-vector-legacy">
<div id="mw-page-base" class="noprint"></div>
<div id="mw-head-base" class="noprint"></div>
<div id="content" class="mw-body" role="main">
	<a id="top"></a>
	<div id="siteNotice" class="mw-body-content"></div>
	<div class="mw-indicators mw-body-content">
	</div>
	<h1 id="firstHeading" class="firstHeading" lang="en">Mods/basic robot/tutorial</h1>
	<div id="bodyContent" class="mw-body-content">
		<div id="siteSub" class="noprint">From Minetest Wiki</div>
		<div id="contentSub"><span class="subpages">&lt; <a href="/Mods" title="Mods">Mods</a>&lrm; | <a href="/Mods/basic_robot" title="Mods/basic robot">basic robot</a></span></div>
		<div id="contentSub2"></div>
		
		<div id="jump-to-nav"></div>
		<a class="mw-jump-link" href="#mw-head">Jump to navigation</a>
		<a class="mw-jump-link" href="#searchInput">Jump to search</a>
		<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="mw-parser-output"><p><br />
</p>
<div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Tutorial_1"><span class="tocnumber">1</span> <span class="toctext">Tutorial 1</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#How_to_reach_the_tutorial"><span class="tocnumber">1.1</span> <span class="toctext">How to reach the tutorial</span></a>
<ul>
<li class="toclevel-3 tocsection-3"><a href="#Layout_of_the_tutorial-area"><span class="tocnumber">1.1.1</span> <span class="toctext">Layout of the tutorial-area</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-4"><a href="#Operation_Basics"><span class="tocnumber">1.2</span> <span class="toctext">Operation Basics</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Service_Programs"><span class="tocnumber">1.3</span> <span class="toctext">Service Programs</span></a>
<ul>
<li class="toclevel-3 tocsection-6"><a href="#Hello_World"><span class="tocnumber">1.3.1</span> <span class="toctext">Hello World</span></a></li>
<li class="toclevel-3 tocsection-7"><a href="#Chest-Access"><span class="tocnumber">1.3.2</span> <span class="toctext">Chest-Access</span></a></li>
<li class="toclevel-3 tocsection-8"><a href="#Math_quiz1"><span class="tocnumber">1.3.3</span> <span class="toctext">Math quiz1</span></a></li>
<li class="toclevel-3 tocsection-9"><a href="#Math_quiz2"><span class="tocnumber">1.3.4</span> <span class="toctext">Math quiz2</span></a></li>
<li class="toclevel-3 tocsection-10"><a href="#Smelter_Robot"><span class="tocnumber">1.3.5</span> <span class="toctext">Smelter Robot</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-11"><a href="#Mobile_Programs"><span class="tocnumber">1.4</span> <span class="toctext">Mobile Programs</span></a>
<ul>
<li class="toclevel-3 tocsection-12"><a href="#Simple_movement1"><span class="tocnumber">1.4.1</span> <span class="toctext">Simple movement1</span></a></li>
<li class="toclevel-3 tocsection-13"><a href="#Simple_movement2"><span class="tocnumber">1.4.2</span> <span class="toctext">Simple movement2</span></a></li>
<li class="toclevel-3 tocsection-14"><a href="#Simple_movement3"><span class="tocnumber">1.4.3</span> <span class="toctext">Simple movement3</span></a></li>
<li class="toclevel-3 tocsection-15"><a href="#Explorer1"><span class="tocnumber">1.4.4</span> <span class="toctext">Explorer1</span></a></li>
<li class="toclevel-3 tocsection-16"><a href="#Explorer1.1"><span class="tocnumber">1.4.5</span> <span class="toctext">Explorer1.1</span></a></li>
<li class="toclevel-3 tocsection-17"><a href="#Explorer2"><span class="tocnumber">1.4.6</span> <span class="toctext">Explorer2</span></a></li>
<li class="toclevel-3 tocsection-18"><a href="#Explorer3"><span class="tocnumber">1.4.7</span> <span class="toctext">Explorer3</span></a></li>
<li class="toclevel-3 tocsection-19"><a href="#Road-Tracker"><span class="tocnumber">1.4.8</span> <span class="toctext">Road-Tracker</span></a></li>
<li class="toclevel-3 tocsection-20"><a href="#Surveyor"><span class="tocnumber">1.4.9</span> <span class="toctext">Surveyor</span></a></li>
<li class="toclevel-3 tocsection-21"><a href="#Follower"><span class="tocnumber">1.4.10</span> <span class="toctext">Follower</span></a></li>
<li class="toclevel-3 tocsection-22"><a href="#Tree-Harvester"><span class="tocnumber">1.4.11</span> <span class="toctext">Tree-Harvester</span></a></li>
<li class="toclevel-3 tocsection-23"><a href="#Digger"><span class="tocnumber">1.4.12</span> <span class="toctext">Digger</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-24"><a href="#Demo-Farm"><span class="tocnumber">1.5</span> <span class="toctext">Demo-Farm</span></a>
<ul>
<li class="toclevel-3 tocsection-25"><a href="#Farming_corn"><span class="tocnumber">1.5.1</span> <span class="toctext">Farming corn</span></a></li>
<li class="toclevel-3 tocsection-26"><a href="#Making_fertilizer"><span class="tocnumber">1.5.2</span> <span class="toctext">Making fertilizer</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-27"><a href="#Debug"><span class="tocnumber">1.6</span> <span class="toctext">Debug</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-28"><a href="#Tutorial_2"><span class="tocnumber">2</span> <span class="toctext">Tutorial 2</span></a>
<ul>
<li class="toclevel-2 tocsection-29"><a href="#How_to_reach_the_tutorial_2"><span class="tocnumber">2.1</span> <span class="toctext">How to reach the tutorial</span></a>
<ul>
<li class="toclevel-3 tocsection-30"><a href="#Layout_of_the_tutorial-area_2"><span class="tocnumber">2.1.1</span> <span class="toctext">Layout of the tutorial-area</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-31"><a href="#Operation_Basics_2"><span class="tocnumber">2.2</span> <span class="toctext">Operation Basics</span></a></li>
<li class="toclevel-2 tocsection-32"><a href="#Tutorial-Programs"><span class="tocnumber">2.3</span> <span class="toctext">Tutorial-Programs</span></a>
<ul>
<li class="toclevel-3 tocsection-33"><a href="#.2300_-_Hello"><span class="tocnumber">2.3.1</span> <span class="toctext">#00 - Hello</span></a></li>
<li class="toclevel-3 tocsection-34"><a href="#Moving"><span class="tocnumber">2.3.2</span> <span class="toctext">Moving</span></a>
<ul>
<li class="toclevel-4 tocsection-35"><a href="#.2301_-_Forward"><span class="tocnumber">2.3.2.1</span> <span class="toctext">#01 - Forward</span></a></li>
<li class="toclevel-4 tocsection-36"><a href="#.2302_-_Climb"><span class="tocnumber">2.3.2.2</span> <span class="toctext">#02 - Climb</span></a></li>
<li class="toclevel-4 tocsection-37"><a href="#.2303_-_Forward_.26_Stop"><span class="tocnumber">2.3.2.3</span> <span class="toctext">#03 - Forward &amp; Stop</span></a></li>
<li class="toclevel-4 tocsection-38"><a href="#.2304_-_Forward_.26_Left"><span class="tocnumber">2.3.2.4</span> <span class="toctext">#04 - Forward &amp; Left</span></a></li>
</ul>
</li>
<li class="toclevel-3 tocsection-39"><a href="#Output"><span class="tocnumber">2.3.3</span> <span class="toctext">Output</span></a>
<ul>
<li class="toclevel-4 tocsection-40"><a href="#.2305_-_Talk"><span class="tocnumber">2.3.3.1</span> <span class="toctext">#05 - Talk</span></a></li>
<li class="toclevel-4 tocsection-41"><a href="#.2306_-_talk.2C_variables"><span class="tocnumber">2.3.3.2</span> <span class="toctext">#06 - talk, variables</span></a></li>
</ul>
</li>
<li class="toclevel-3 tocsection-42"><a href="#Build_.26_Mine"><span class="tocnumber">2.3.4</span> <span class="toctext">Build &amp; Mine</span></a>
<ul>
<li class="toclevel-4 tocsection-43"><a href="#.2307_-_Place"><span class="tocnumber">2.3.4.1</span> <span class="toctext">#07 - Place</span></a></li>
<li class="toclevel-4 tocsection-44"><a href="#.2308_-_Dig"><span class="tocnumber">2.3.4.2</span> <span class="toctext">#08 - Dig</span></a></li>
</ul>
</li>
<li class="toclevel-3 tocsection-45"><a href="#Inventory-Access"><span class="tocnumber">2.3.5</span> <span class="toctext">Inventory-Access</span></a>
<ul>
<li class="toclevel-4 tocsection-46"><a href="#.2309_-_Insert"><span class="tocnumber">2.3.5.1</span> <span class="toctext">#09 - Insert</span></a></li>
<li class="toclevel-4 tocsection-47"><a href="#.2310_-_Take"><span class="tocnumber">2.3.5.2</span> <span class="toctext">#10 - Take</span></a></li>
</ul>
</li>
<li class="toclevel-3 tocsection-48"><a href="#Manipulations"><span class="tocnumber">2.3.6</span> <span class="toctext">Manipulations</span></a>
<ul>
<li class="toclevel-4 tocsection-49"><a href="#.2311_-_read_node_.26_activate"><span class="tocnumber">2.3.6.1</span> <span class="toctext">#11 - read_node &amp; activate</span></a></li>
</ul>
</li>
<li class="toclevel-3 tocsection-50"><a href="#.2312_-_Simple_lightswitch"><span class="tocnumber">2.3.7</span> <span class="toctext">#12 - Simple lightswitch</span></a>
<ul>
<li class="toclevel-4 tocsection-51"><a href="#.2313_-_os"><span class="tocnumber">2.3.7.1</span> <span class="toctext">#13 - os</span></a></li>
</ul>
</li>
<li class="toclevel-3 tocsection-52"><a href="#.2314_-_Fun"><span class="tocnumber">2.3.8</span> <span class="toctext">#14 - Fun</span></a></li>
<li class="toclevel-3 tocsection-53"><a href="#.2315_-_keypad"><span class="tocnumber">2.3.9</span> <span class="toctext">#15 - keypad</span></a></li>
<li class="toclevel-3 tocsection-54"><a href="#.2316_-_greeting_robot"><span class="tocnumber">2.3.10</span> <span class="toctext">#16 - greeting robot</span></a></li>
<li class="toclevel-3 tocsection-55"><a href="#.2317_-_Smelter_robot"><span class="tocnumber">2.3.11</span> <span class="toctext">#17 - Smelter robot</span></a></li>
<li class="toclevel-3 tocsection-56"><a href="#.2318_-_Math-quiz"><span class="tocnumber">2.3.12</span> <span class="toctext">#18 - Math-quiz</span></a></li>
<li class="toclevel-3 tocsection-57"><a href="#.2319_-_Measure_area"><span class="tocnumber">2.3.13</span> <span class="toctext">#19 - Measure area</span></a></li>
<li class="toclevel-3 tocsection-58"><a href="#.2320_-_Roadtracker"><span class="tocnumber">2.3.14</span> <span class="toctext">#20 - Roadtracker</span></a></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>

<h1><span class="mw-headline" id="Tutorial_1">Tutorial 1</span></h1>
<div class="thumb tright"><div class="thumbinner" style="width:302px;"><a href="/File:Robots-Tutorial_Index.png" class="image"><img alt="" src="/images/thumb/4/48/Robots-Tutorial_Index.png/300px-Robots-Tutorial_Index.png" decoding="async" width="300" height="225" class="thumbimage" srcset="/images/thumb/4/48/Robots-Tutorial_Index.png/450px-Robots-Tutorial_Index.png 1.5x, /images/thumb/4/48/Robots-Tutorial_Index.png/600px-Robots-Tutorial_Index.png 2x" /></a>  <div class="thumbcaption"><div class="magnify"><a href="/File:Robots-Tutorial_Index.png" class="internal" title="Enlarge"></a></div>Index of robots-tutorial - sign at wall, spawner with code on ground.</div></div></div>
<p>There is a 'live' tutorial-parcour about programming rnd's <a href="/Mods/basic_robot" title="Mods/basic robot">basic_robots</a> <br />
at his <a href="/ROBOTS-server" title="ROBOTS-server">ROBOTS-server</a>, 46.150.38.198:30000.<br />
It can be reached via teleporter near the spawn.
</p>
<h2><span class="mw-headline" id="How_to_reach_the_tutorial">How to reach the tutorial</span></h2>
<ul><li>At login, solve the math-quiz to get teleported out of the spawn-building</li></ul>
<dl><dd>it might take up to 10 seconds for the dialog to pop up</dd></dl>
<ul><li>look for the teleporter - it has 2 big oranges on top, and a big black button at the floor</li>
<li>stand on that button, and punch it</li></ul>
<h3><span class="mw-headline" id="Layout_of_the_tutorial-area">Layout of the tutorial-area</span></h3>
<ul><li>big test-area</li>
<li>tutorials (0..9, plus some more)</li>
<li>Wall
<ul><li>automatic door to next area</li>
<li>robots with example-programs, and signs at base of wall</li></ul></li>
<li>"Lobby" with teleporter</li></ul>
<h2><span class="mw-headline" id="Operation_Basics">Operation Basics</span></h2>
<p>Short summary about the operation of basic_robots:
</p>
<ul><li>There is a spawner ("cpu"), that has to be put on the ground somewhere.</li></ul>
<dl><dd><dl><dd>This means that players cannot activate their own robots in areas protected by other players.</dd></dl></dd>
<dd>The spawner acts as a kind of basestation.</dd>
<dd>Robots can only move a certain distance from it.</dd></dl>
<ul><li>Rightclick the spawner to access a form with the code, the inventory and the library</li></ul>
<dl><dd>the inventory has 4*8 slots, same size as a chest, or the player's inventory.</dd>
<dd>the library has 16 slots, same as a bookshelf</dd></dl>
<ul><li>When pressing the "start"-button, the spawner creates a robot ("worker") on the space above it</li></ul>
<dl><dd>Each spawner can only control one robot at a time.</dd></dl>
<ul><li><ul><li>With no code, the robot can be steered with a remote-control</li>
<li>otherwise, the robot executes the code from the form</li></ul></li>
<li>The "Stop"-button stops the program execution, and the robot disappears.</li>
<li>The code is running in a sandbox, and is called once every second.</li></ul>
<p>In the following chapters,, we present some of those programs, 
that have been written by rnd and users at his server.
</p>
<h2><span class="mw-headline" id="Service_Programs">Service Programs</span></h2>
<p>'Service' means, programs that run in place on the robot/spawner,
and (maybe) provide some service.
</p><p>In this tutorial-parcour at the robots-server, 
the robots are started with a button-push<br />
on the big black keypads over the spawner. 
</p>
<dl><dd>The keypad is set to send a 2=ON to the spawner for starting the program.</dd></dl>
<p>The keypads are part of the mod <a href="/Mods/basic_machines" title="Mods/basic machines">basic_machines</a>.
</p>
<h3><span class="mw-headline" id="Hello_World">Hello World</span></h3>
<p>To tell the robot what to do, write commands into his code-area.<br />
Rightclick the robot-spawner to see the code.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> -- This simple program makes the robot 'talk', as in 'write text to the chat'.
 say("Hello! I'm a robot.")
 say("A random number: " .. math.random() )
 self.remove()   -- stop</pre></div>
<p>These commands would be repeated every second,<br />
but "self.remove()" removes the robot, and thus ends the program.
</p>
<dl><dd>(Not much 'service' in this program, but it runs 'in place'&#160;:)</dd></dl>
<h3><span class="mw-headline" id="Chest-Access">Chest-Access</span></h3>
<div class="thumb tright"><div class="thumbinner" style="width:302px;"><a href="/File:Br-RobotsTutorial-Chest.png" class="image"><img alt="" src="/images/thumb/f/f5/Br-RobotsTutorial-Chest.png/300px-Br-RobotsTutorial-Chest.png" decoding="async" width="300" height="225" class="thumbimage" srcset="/images/thumb/f/f5/Br-RobotsTutorial-Chest.png/450px-Br-RobotsTutorial-Chest.png 1.5x, /images/thumb/f/f5/Br-RobotsTutorial-Chest.png/600px-Br-RobotsTutorial-Chest.png 2x" /></a>  <div class="thumbcaption"><div class="magnify"><a href="/File:Br-RobotsTutorial-Chest.png" class="internal" title="Enlarge"></a></div>basic_robot-Tutorial - Chest-Access</div></div></div>
<p>With "insert" and "take", robots can put stuff into chests and other containers,<br /> 
as well as take items out.
</p><p>This example has a chest, one robot on the left, another on the right,<br />
and one keypad for each robot.
</p><p>The first robot places 2 apples into the chest on its left:
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> insert.left("default:apple 2")
 --say("Done: insert")
 self.remove()</pre></div>
<p>The other robot takes 1 apple from the chest on its right:
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> take.right("default:apple")
 --say("Done: take")
 self.remove()</pre></div>
<p>Note: there are no checks for errors, e.g. 
</p>
<ul><li>if there are enough apples in the inventory,</li>
<li>if there is a chest with enough room next to the robot,</li>
<li>if the chest can be accessed (it might belong to some other player),</li>
<li>if the action failed for some other reason,</li></ul>
<p>etc.
</p><p>Catching all those possible errors (and dealing with them)
can make 'simple programs' quite complicated.
</p>
<h3><span class="mw-headline" id="Math_quiz1">Math quiz1</span></h3>
<p>The robot generates a math-question (like "WHAT IS 13*19&#160;?"), and listens to the chat.<br />
Players answer via chat, and the robot will announce "Correct" or "Wrong".
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> -- MATH QUIZ by rnd
 -- QUIZ: asks math question
 if not state then
   state=1;
   a=0; b=0; question = "";
   function generate_question()
 	a = math.random(12)+3;
 	b = math.random(12)+3;
 	question = "WHAT IS " .. a .."*".. b .. "&#160;? ";
 	say(question)
   end
   generate_question()
 end
 self.listen(1)

 speaker, msg = self.listen_msg()
 msg = tonumber(msg)
 if msg then

   if msg == a*b then
   	say(speaker .. " ANSWERED CORRECTLY! ")
 	generate_question()
   else
 	say("WRONG! " .. question)
   end
 
 end
 turn.left()</pre></div>
<p>Note: it doesn't keep track of who answered, doesn't keep score, 
and there is only one form of quiz (i.e. a*b).
</p>
<h3><span class="mw-headline" id="Math_quiz2">Math quiz2</span></h3>
<p>The robot generates a math-question (like "WHAT IS 13*19&#160;?"), and listens to the chat.<br />
Players answer via chat, and if the correct answer comes up, <br />
the robot fills a chest on top of the robot with some items as a reward for that player.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> -- math quiz robot: answer correct and take reward from chest
 -- QUIZ: asks math question
 if not state then 
   state = 1;
   a=0;b=0; question = "";
   function generate_question()
	a = math.random(12)+10;
	b = math.random(12)+10;
	question = "WHAT IS " .. a .."*".. b .. "&#160;? ";
	say(question)
   end
   generate_question()
   self.listen(1)
 end

 speaker, msg = self.listen_msg()
 msg = tonumber(msg)
 if msg then 
   if msg == a*b then
	say(speaker .. " ANSWERED CORRECTLY!  You get reward in chest")
	insert.up("default:apple")
	insert.up("default:pine_tree")
	generate_question()
   else
	say("WRONG! " .. question)
   end
 end
 turn.left()</pre></div>
<p>(Note: there is no check which player takes the price from the chest&#160;:)<br />
Also, there is no check if the robot still has items in his inventory to give as  reward.
</p>
<h3><span class="mw-headline" id="Smelter_Robot">Smelter Robot</span></h3>
<div class="thumb tright"><div class="thumbinner" style="width:302px;"><a href="/File:Br-SmelterRobot.png" class="image"><img alt="" src="/images/thumb/e/ee/Br-SmelterRobot.png/300px-Br-SmelterRobot.png" decoding="async" width="300" height="273" class="thumbimage" srcset="/images/e/ee/Br-SmelterRobot.png 1.5x" /></a>  <div class="thumbcaption"><div class="magnify"><a href="/File:Br-SmelterRobot.png" class="internal" title="Enlarge"></a></div>basic_robot - Smelter-robot, fills furnace</div></div></div>
<p>This robot moves ore to be smelted from the chest at the left 
into the furnace at its top.<br />
The lumps of coal come from the robot's inventory.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> --smelter robot: put cobble in chest and it will be smelted to stone in the furnace
 insert.up("default:coal_lump","fuel")
 if take.left("default:cobble") then
   insert.up("default:cobble","src")
 end</pre></div>
<p>The keypad to start the robot with a button-push comes from the mod <a href="/Mods/basic_machines" title="Mods/basic machines">basic_machines</a>.<br />
The furnace starts operating as soon as it has both fuel and ore.
</p>
<h2><span class="mw-headline" id="Mobile_Programs">Mobile Programs</span></h2>
<p>'Mobile' means, programs for robots that move around, dig, build, etc.
</p>
<h3><span class="mw-headline" id="Simple_movement1">Simple movement1</span></h3>
<p>This robot will move forward, 
until blocked, e.g. by a wall, cliff, or some other obstacle.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> move.forward()</pre></div>
<p>This command will be repeated every second.
</p>
<h3><span class="mw-headline" id="Simple_movement2">Simple movement2</span></h3>
<p>You can make robots move in all directions and turn around.<br />
The robot can't fly, but it can move up one block above the ground.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> move.forward()
 move.up()</pre></div>
<p>Climbing upstairs.
</p>
<h3><span class="mw-headline" id="Simple_movement3">Simple movement3</span></h3>
<p>Now, we also check for success of the movement.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> -- Using the "if" sentence you can check when robot can't walk anymore
 self.spam(1)
 if move.forward() then
   say("walking ..")
 else
   say("I hit obstacle. removing robot"); self.remove()
 end</pre></div>
<p>The command "move.forward()" is actually a function,<br />
that returns true or false as a result, <br />
meaning the move was successful or not.
</p><p>So, the if-statement checks if moving forward failed, 
and if that happens, ends the program.
</p>
<h3><span class="mw-headline" id="Explorer1">Explorer1</span></h3>
<p>Moving forward as above, but when moving fails, the robot will turn 90° to the left.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> -- A very simple robot: it will turn left when it can't go forward anymore.
 if not move.forward() then
   turn.left()
 end</pre></div>
<p>So, the if-statement checks if moving forward failed, and turns left instead.
</p>
<h3><span class="mw-headline" id="Explorer1.1">Explorer1.1</span></h3>
<p>Simple moves as above, but detects air on the right, to trigger a new turn.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> -- Follow the right wall
 if read_node.right()=="air" then
   turn.right()
 end
 if not move.forward() then
   turn.left()
 end</pre></div>
<p>This is essentially  a maze-runner, with the strategy "follow the right wall".
</p>
<h3><span class="mw-headline" id="Explorer2">Explorer2</span></h3>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> --EXPLORER by rnd
 if not move.forward() then
	say ("i see " .. read_node.forward())
	if math.random(2)==1 then
		turn.left()
	else
		turn.right()
	end
 end</pre></div>
<p>Moves forward until it hits an obstacle (and reports it),<br />
then randomly turns left or right.
</p>
<h3><span class="mw-headline" id="Explorer3">Explorer3</span></h3>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> -- ADVANCED EXPLORER, can climb stairs
 node = read_node.down()
 if node == "air" then
	move.down()
 else -- walk around
 
	if read_node.forward()~="air" then
		move.up()
	end
	
	if not move.forward() then
		if math.random(2)==1 then
			turn.left()
		else
			turn.right()
		end
	end
 end</pre></div>
<p>...
</p>
<h3><span class="mw-headline" id="Road-Tracker">Road-Tracker</span></h3>
<p>There is a cobble-road at the tutorial-parcour,
with turns, crossings, deadends etc. <br />
and his program moves along this road.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> -- FOLLOW COBBLE ROAD by rnd
 --tracks road

 --run then tracker.step()
 if not tracker then
	tracker = {};
	tracker.road = "default:cobble";

	tracker.step = function()
		if read_node.forward_down() == tracker.road then
			if not move.forward() then turn.angle(180) end
		else
			turn.left();
			if read_node.forward_down() ~= tracker.road then
				turn.right(); turn.right();
				if read_node.forward_down() ~= tracker.road then
					turn.right() 
				end
			end
		end
	end
 end
 
 tracker.step()</pre></div>
<p>...
</p>
<h3><span class="mw-headline" id="Surveyor">Surveyor</span></h3>
<p>There is an area at the robot-tutorial paved with glass-blocks.<br />
This robot walks the outer edge of that area and measures the area size.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> if not area then
	area = "default:glass"
	state = 0;
	width = 0; height = 0; i=0; j=0;
	step  = 0;
	move.forward(); turn.left()
	startpos = self.pos();
	self.spam(1)
 end
 
 pos = self.pos();
 if state ~= 1 and j&gt;0 and (pos.x-startpos.x)^2&lt;1 and (pos.z-startpos.z)^2&lt;1 then
	say("finished walking around along "..j .. " edges,  " .. step .. " steps")
	if step == 2*(height+width)-4 then 
		say("area is rectangle of size " .. width .." x " .. height)
	else
		say("this area is not rectangle")
	end
	self.remove()
	state = 1
 end
 
 if state == 0 then
	turn.left();
	if read_node.forward_down()==area then  -- we can turn left and go
		j=j+1
	else 
		turn.right()
	end
 	
	node = read_node.forward_down();
	if node ~= area then 
		if j == 1 then 
			height = i+1
		elseif j == 2 then 
			width = i+1	
			--say("master, field width is " .. width .. " and field height is " .. height)
		end
		j=j+1; i=0;
		turn.right()
	else
		move.forward(); i = i+1;
		step = step+1;
	end
 end</pre></div>
<h3><span class="mw-headline" id="Follower">Follower</span></h3>
<p>This program tries to follow a player.<br />
From the positions of the player and the robot,
it calculates direction and distance.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> -- follower, by rnd
 if not state then
	name  = "rnd";
	owner = "rnd";
      --name  = "singleplayer";
      --owner = "singleplayer";
	gdist = 3;
	state = 0
	self.listen(1)
	self.spam(1)
 end
	-- process commands: follow / attack a player
	speaker, msg = self.listen_msg();
	if speaker == owner then
		if string.sub(msg,1,1)=="." then
			if string.sub(msg,2,5) == "kill" then
				pl=find_player(4);
				if pl and pl~= owner then
					if attack(pl) then
						attack(pl); attack(pl); attack(pl);
						say("I killed " .. pl .. " master. ")
					end
				end
			elseif string.sub(msg,2,3) == "go" then
				name = string.sub(msg,5) or owner;
				say("ok master, i follow " .. name.. " now")
			end
		end
	end
 	
	-- calculate positions and directions:
	pos  = self.pos()
	tpos = player.getpos(name);
	if not tpos then say ("master " .. name .. " left "); name = owner; tpos = player.getpos(name); end
	dir = self.viewdir();
 
	tpos.x = tpos.x-pos.x; tpos.z = tpos.z-pos.z;
	tdir   = {x=math.abs(tpos.x),z=math.abs(tpos.z)};
 
 if tdir.x&lt;gdist and tdir.z&lt; gdist then
	-- stay away
 else
	if state == 0 then
		if tdir.x&gt;tdir.z then
			cdir = 1
		elseif  tdir.z&gt;tdir.x then
			cdir = 2
		elseif math.rnd(2) == 1 then
			cdir = 1
		else
			cdir = 2
		end
 
		if cdir == 1 then -- x
			if dir.x^2&lt;0.5 then
				turn.right();dir = self.viewdir();
			end
			if dir.x*tpos.x&lt;0 then
				turn.angle(180)
			end
		elseif  cdir == 2 then -- z
			if dir.z^2&lt;0.5 then
				turn.right();dir = self.viewdir();
			end
			if dir.z*tpos.z&lt;0 then
				turn.angle(180)
			end
		end
	else
		state = state - 1
	end
 	
	-- move:
	if not move.forward() then
		if state == 0 then state = 3 end -- stuck
		node =  read_node.forward()
		if node~="air" and state == 3 then
			if read_node.down()~="air" then move.up() end
		else
			if math.random(2)==1 then turn.left() else turn.right() end
		end
	else
		move.down()
	end
 end</pre></div>
<p>If the robot gets stuck, it tries to move in a random direction.<br />
But there is no real pathfinding.
</p><p>The program also listens to chat for commands,
currently ".go playerX" and ".kill playerX".
</p>
<h3><span class="mw-headline" id="Tree-Harvester">Tree-Harvester</span></h3>
<p>This robot moves around randomly, until it finds a pine-tree.<br />
When one is found, it digs/harvests all of its wood.<br />
To climb up the whole height of the tree, it places leaves under the bot.
</p><p>This works well for pines, because pines are a simple vertical column of wood,
plus some leaves.<br />
Appletrees or jungletrees have a more complicated form,<br />
so this algorithm would only get some parts of such trees.
</p><p>Also, this program does not harvest apples.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> --TREE HARVESTER by rnd
 -- ADVANCED tree harvester/explorer for pine-trees
 tree   = "default:pine_tree";
 leaves = "default:pine_needles";

 if read_node.up() == tree then -- dig up
	dig.up(); 
	move.up(); 
	place.down(leaves) 
 else -- go down if can
	node = read_node.down()
	if node == leaves or node == tree then 
		dig.down(); move.down() 
	elseif node == "air" then
		move.down()
	else -- walk around
		node = read_node.forward();
		if node == tree then 
			say("Tree found")
			dig.forward() 
		elseif node ~= "air" then
			move.up()
		end
		if not move.forward() then
			if math.random(2)==1 then
				turn.left()
			else
				turn.right()
			end
		end
	end
 end</pre></div>
<p>Note: at the start the robot needs some leaves in its inventory for climbing up.
</p>
<h3><span class="mw-headline" id="Digger">Digger</span></h3>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre> --HOLE DIGGER by rnd
 if not state then
	a=3; b=3; c=5;
	state = 0; dig.forward(); move.forward()
	angle = 1;     -- 1 turn right
	i=1; j=1; k=1; a=a-1;
 end
 
 if state == 0 then
	for j = 1,b do
		for i = 1,a do
			dig.forward();
			move.forward();
			if i==a and j&lt; b then
				turn.angle(90*angle);
				dig.forward(); move.forward();
				turn.angle(90*angle);
				angle = -angle;
			end
		end
		if j==b then
			if (k%2 == 1) then dig.forward() end
			dig.down(); move.down(); turn.angle(180);
			k=k+1; if k&gt;c then state = 1 end
		end
	end
 end</pre></div>
<p>...
</p>
<h2><span class="mw-headline" id="Demo-Farm">Demo-Farm</span></h2>
<p>There is a small field near spawn,
to show how to automate farming,
and how to use fertilizer.
</p><p>The farming bots turn around, and continue with the next row 
when reaching the wall / fence.
</p>
<h3><span class="mw-headline" id="Farming_corn">Farming corn</span></h3>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>--FARMING by rnd
if not s then 
  plant = "farming:corn_8"; seed = "farming:corn"; weed = "farming:weed"
  wall  = "default:fence_wood";

  harvest_step = function(node) 
  if node==plant or node == weed or node == "air" then 
		dig.forward(); move.forward(); local nutrient = read_text.down("nutrient",1)
		if nutrient&lt;8 then insert.down("farming:fertilizer","") end
	else
		move.forward()
	end
	place.backward(seed)
end

s=0; angle = 90 
end

if s==0 then -- walk
	node = read_node.forward();
	if node~=wall then harvest_step(node);
	else 
		turn.angle(angle); node = read_node.forward()
		if node == wall then turn.angle(180); harvest_step(node); turn.angle(-angle)
		else harvest_step(node); turn.angle(angle) angle=-angle;
		end
	end
end</pre></div>
<p>Note:
</p>
<ul><li>The nutrient-value is an integer stored in the soil-nodes.</li>
<li>The program does not check if fertilizer is in the inventory.</li>
<li>The program does not check for soil before planting (i.e. planting on dirt will waste the seed).</li></ul>
<h3><span class="mw-headline" id="Making_fertilizer">Making fertilizer</span></h3>
<p>Currently, there are two recipes for fertilizer:
</p>
<ul><li>3 leaves</li>
<li>3 papyrus</li></ul>
<p>Robots cannot harvest leaves from trees easily, 
so here is a papyrus-farm:
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>--FARMING papyrus
if not s then 
plant = "default:papyrus"; seed = "air";
wall  = "default:fence_wood";
y0 = self.pos().y
y1 = y0+2;
harvest_step = function(node) 
	if node==plant then 
		move.forward();
		local step = 0
		while (read_node.up() == plant and step &lt; 4) do
			step = step+1; move.up()
		end
		move.down();dig.up(); move.up()
		s=1 
	else
		move.forward()
	end
end

s=0; angle=90 
t = 0;
end

if s==0 then -- walk
	node = read_node.forward();
	if t==0 and node~=wall then 
		harvest_step(node);
	else 
		if t == 0 then
			turn.angle(angle); node = read_node.forward()
			if node == wall then 
				turn.angle(180); harvest_step(node);
				t = 1
			else harvest_step(node); t=2
			end
		elseif t == 1 then
			turn.angle(-angle); t=0
		elseif t == 2 then
			turn.angle(angle); angle=-angle; t=0
		end
	end
elseif s==1 then
	if self.pos().y&gt;y0 then dig.down() move.down()
                       else craft("farming:fertilizer") s = 0 end
end</pre></div>
<p>Note: the robot can now craft items, such as fertilizer.
</p>
<h2><span class="mw-headline" id="Debug">Debug</span></h2>
<p>Screenshot for current problem - 2017-01-18:
</p>
<div class="thumb tright"><div class="thumbinner" style="width:302px;"><a href="/File:Br_debug1.png" class="image"><img alt="" src="/images/thumb/a/aa/Br_debug1.png/300px-Br_debug1.png" decoding="async" width="300" height="225" class="thumbimage" srcset="/images/thumb/a/aa/Br_debug1.png/450px-Br_debug1.png 1.5x, /images/thumb/a/aa/Br_debug1.png/600px-Br_debug1.png 2x" /></a>  <div class="thumbcaption"><div class="magnify"><a href="/File:Br_debug1.png" class="internal" title="Enlarge"></a></div>robot-library does not update title of books</div></div></div>
<hr />
<p><br />
</p>
<h1><span class="mw-headline" id="Tutorial_2">Tutorial 2</span></h1>
<div class="thumb tright"><div class="thumbinner" style="width:182px;"><a href="/index.php?title=Special:Upload&amp;wpDestFile=Robots-Tutorial2_Index.png" class="new" title="File:Robots-Tutorial2 Index.png">File:Robots-Tutorial2 Index.png</a>  <div class="thumbcaption">Index of robots-tutorial - sign at wall, spawner with code on ground.</div></div></div>
<p>There is a 'live' tutorial-parcour about programming rnd's at his server <a href="/ROBOTS_SKYBLOCK" class="mw-redirect" title="ROBOTS SKYBLOCK">ROBOTS_SKYBLOCK</a>, 46.150.38.60:30000.<br />
It can be reached via teleporter at spawn,
and via stairs.
</p>
<h2><span class="mw-headline" id="How_to_reach_the_tutorial_2">How to reach the tutorial</span></h2>
<p>As a new player, you spawn at the 'arrival-hub', at 64,8,-96.<br />
You can get back there with the command <b>/spawn</b>.
</p><p>At the wall in front, you see big signs
</p>
<ul><li>"to your island"</li></ul>
<dl><dd>there is a button on the floor at 54,8,-88 that teleports to your personal island</dd></dl>
<ul><li>"spawn"</li></ul>
<dl><dd>button on floor at 64,8,-88, this will teleport to the 'old spawn' at 16017,8,16016</dd></dl>
<ul><li>"<b>lab</b>"            - punch the button on the floor at 73,8,-87</li></ul>
<dl><dd>this will teleport you to the start of the <b>tutorial-area</b> at 15986,-7,16000</dd></dl>
<p>There are also stairs down to the tutorial-area at the 'old spawn',
with a big sign "TUTORIAL".
</p>
<h3><span class="mw-headline" id="Layout_of_the_tutorial-area_2">Layout of the tutorial-area</span></h3>
<p>The robots have big numbers on top of them at the wall.<br />
..
</p>
<h2><span class="mw-headline" id="Operation_Basics_2">Operation Basics</span></h2>
<p>Short summary about the operation of basic_robots:
</p>
<ul><li>There is a spawner ("cpu"), that has to be put on the ground somewhere.</li></ul>
<dl><dd><dl><dd>This means that players cannot activate their own robots in areas protected by other players.</dd></dl></dd>
<dd>The spawner acts as a kind of basestation.</dd>
<dd>Robots can only move a certain distance from it.</dd></dl>
<ul><li>Rightclick the spawner to access a form with the code, the inventory and the library</li></ul>
<dl><dd>the inventory has 4*8 slots, same size as a chest, or the player's inventory.</dd>
<dd>the library has 16 slots, same as a bookshelf</dd></dl>
<ul><li>When pressing the "start"-button, the spawner creates a robot ("worker") on the space above it</li></ul>
<dl><dd>Each spawner can only control one robot at a time.</dd></dl>
<ul><li><ul><li>With no code, the robot can be steered with a remote-control</li>
<li>otherwise, the robot executes the code from the form</li></ul></li>
<li>The "Stop"-button stops the program execution, and the robot disappears.</li>
<li>The code is running in a sandbox, and is called once every second.</li></ul>
<p>In the following chapters, we present some of those programs, 
that have been written by rnd and users at his server.
</p>
<h2><span class="mw-headline" id="Tutorial-Programs">Tutorial-Programs</span></h2>
<p>In this tutorial-parcour, the robots are started by punching the big keypads mounted above the spawners. 
</p>
<dl><dd>The keypads are set to send a signal 2=ON to the spawner for starting the program.</dd></dl>
<p>The keypads are part of the mod <a href="/Mods/basic_machines" title="Mods/basic machines">basic_machines</a>.
</p>
<h3><span id="#00_-_Hello"></span><span class="mw-headline" id=".2300_-_Hello">#00 - Hello</span></h3>
<p>To tell the robot what to do, write commands into his code-area.<br />
Rightclick the robot-spawner to see the code.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>say("Hello! im a robot")
self.remove()</pre></div>
<p>These commands would be repeated every second,<br />
but "self.remove()" removes the robot, and thus ends the program.
</p>
<h3><span class="mw-headline" id="Moving">Moving</span></h3>
<h4><span id="#01_-_Forward"></span><span class="mw-headline" id=".2301_-_Forward">#01 - Forward</span></h4>
<p>Simple movement
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>move.forward()</pre></div>
<p>When the robot hits a wall (or other obstacle), movement fails.<br />
So it looks like the robot stopped, but it actually tries again every second.
</p>
<h4><span id="#02_-_Climb"></span><span class="mw-headline" id=".2302_-_Climb">#02 - Climb</span></h4>
<p>Robots can climb too, if there is a block to step on.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>move.forward()
move.up()</pre></div>
<p>As above - this one stops moving when it hits the ceiling.
</p>
<h4><span id="#03_-_Forward_&amp;_Stop"></span><span class="mw-headline" id=".2303_-_Forward_.26_Stop">#03 - Forward &amp; Stop</span></h4>
<p>Move forward until hitting an obstacle, then stopping the program.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>self.spam(1)
if move.forward() then
  say("walking ..")
else
  say("I hit obstacle. removing robot"); self.remove()
end</pre></div>
<p>The spam-option needs to be set to allow output of more than one messages.
</p>
<h4><span id="#04_-_Forward_&amp;_Left"></span><span class="mw-headline" id=".2304_-_Forward_.26_Left">#04 - Forward &amp; Left</span></h4>
<p>Another very simple robot: it will turn left when it can't go forward anymore.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>if not move.forward() then
  turn.left()
end</pre></div>
<h3><span class="mw-headline" id="Output">Output</span></h3>
<h4><span id="#05_-_Talk"></span><span class="mw-headline" id=".2305_-_Talk">#05 - Talk</span></h4>
<p>Text-output via say().
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>text = "This is a recorded message. Now robot will remove itself.";
say(text)
self.remove()</pre></div>
<p>You can make robot remember stuff by using variables.
</p>
<h4><span id="#06_-_talk,_variables"></span><span class="mw-headline" id=".2306_-_talk.2C_variables">#06 - talk, variables</span></h4>
<p>xx
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>if not text then
  text = "This is one time message.."
  say(text)
end
turn.right()</pre></div>
<p>Variables are always set new when robot runs. <br />
To change that you can use "if" to only set it once.<br /> 
This robot will say "hello" only once, but will turn around all the time.
</p>
<h3><span id="Build_&amp;_Mine"></span><span class="mw-headline" id="Build_.26_Mine">Build &amp; Mine</span></h3>
<h4><span id="#07_-_Place"></span><span class="mw-headline" id=".2307_-_Place">#07 - Place</span></h4>
<p>You can use robot to build houses and more.<br />
Here "place" command is used to place dirt block right of robot. <br />
NOTE: you need to have dirt in robot "storage" or it can't place it.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>place.right("default:dirt")</pre></div>
<h4><span id="#08_-_Dig"></span><span class="mw-headline" id=".2308_-_Dig">#08 - Dig</span></h4>
<p>This robot digs a block to the left.  It puts it in storage. <br />
NOTE: robot can only dig 1 block per operation.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>dig.left()</pre></div>
<p>xx
</p>
<h3><span class="mw-headline" id="Inventory-Access">Inventory-Access</span></h3>
<h4><span id="#09_-_Insert"></span><span class="mw-headline" id=".2309_-_Insert">#09 - Insert</span></h4>
<p>With "insert" robot can put stuff inside chests and more.<br />
This robot places 2 apples in the chest on its right
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>insert.right("default:apple 2")
self.remove()</pre></div>
<p>xx
</p>
<h4><span id="#10_-_Take"></span><span class="mw-headline" id=".2310_-_Take">#10 - Take</span></h4>
<p>This robot takes 1 apple from the chest on its left.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>take.left("default:apple")
self.remove()</pre></div>
<p>xx
</p>
<h3><span class="mw-headline" id="Manipulations">Manipulations</span></h3>
<h4><span id="#11_-_read_node_&amp;_activate"></span><span class="mw-headline" id=".2311_-_read_node_.26_activate">#11 - read_node &amp; activate</span></h4>
<p>The robot uses read_node() to look at the state of the light-block, <br />
and activate() to turn it on and off.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>if not pn then pn="LightControl"; -- say(pn) -- hajo, 2017-04-13
  self.label(pn)   -- show program-name instead of robot-id
  write_text.up("Press this button")  -- label the keypad above robot
  turn.left(); turn.left(); move.forward()  -- move to the light
  i=0
end

i=i+1
n=read_node.forward(); --say(n)
if      n=="basic_machines:light_on" then
  say("The light is ON")
  activate.forward(-1)  --turn the light OFF
elseif  n=="basic_machines:light_off" then
  say("The light is OFF")
  activate.forward(1)  --turn it ON again
else
  say("No light found&#160;!")
  self.remove() 
end

if i&gt;9 then  -- enough for now 
  say("stop")
  self.remove() 
end</pre></div>
<p>xx
</p>
<h3><span id="#12_-_Simple_lightswitch"></span><span class="mw-headline" id=".2312_-_Simple_lightswitch">#12 - Simple lightswitch</span></h3>
<p>Settings on the keypad:  
</p>
<ul><li>target: 0 -1 0 (means directly below)</li>
<li>mode: 3 (means toggle)</li></ul>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>--no robot here</pre></div>
<p><br />
</p>
<h4><span id="#13_-_os"></span><span class="mw-headline" id=".2313_-_os">#13 - os</span></h4>
<p>The robot can call functions from the operating-system, 
e.g. to get the time and date.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>self.label("TimeDate")  -- program runs too short for this to be visible

td = os.date("%Y-%m-%d  %H:%M:%S")
msg = "Time and date"
say(msg..": "..td)

ok=write_text.up(msg)  -- label the button above the robot
ok=write_text.down("This robot was last run: "..td)  -- write text on cpu-box

self.remove()  -- stop program</pre></div>
<p>This robot also writes the time&amp;date onto its own spawner.
</p><p><br />
</p>
<h3><span id="#14_-_Fun"></span><span class="mw-headline" id=".2314_-_Fun">#14 - Fun</span></h3>
<p>BS-generator
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>--BS-generator by rnd / stop+countdown: 2017-04-24 hajo

if not progname then
  progname="BS-generator"
  ok=write_text.up("Press again to stop")  -- label button above robot

  t=read_text.down();   -- program-name or countdown-value
  n=tonumber(t)  -- returns nil if text is not a number
  if n then
-- say(t.."=&gt;"..n)
   say("Enough BS, for now.")
   i=0  -- countdown will stop immediately
  else
    i=20  -- countdown-timer
  end

	 pretexts = {"Our challenge to","The facilitators","Our number-one internal clients","The white-collar workers","The human resources","Our parallel controls",
	"To continue our growth, we must","Brand identities", "A low-risk high-yield calibration","Collaborative milestones","The policy makers",
	"The Co-Head of Customer Relations","Cutting-edge philosophies","The executive committee"}
	 adverbs = {"appropriately","assertively","authoritatively","collaboratively","compellingly","competently","completely","continually","conveniently","credibly","distinctively","dramatically","dynamically","efficiently","energistically","enthusiastically","fungibly","globally","holisticly","interactively","intrinsically","monotonectally","objectively","phosfluorescently","proactively","professionally","progressively","quickly","rapidiously","seamlessly","synergistically","uniquely"}
	 verbs = {"actualize","administrate","aggregate","architect","benchmark","brand","build","cloudify","communicate","conceptualize","coordinate","create","cultivate","customize","deliver","deploy","develop","dinintermediate disseminate","drive","embrace","e-enable","empower","enable","engage","engineer","enhance","envisioneer","evisculate","evolve","expedite","exploit","extend","fabricate","facilitate","fashion","formulate","foster","generate","grow","harness","impact","implement","incentivize","incubate","initiate","innovate","integrate","iterate","leverage existing","leverage other's","maintain","matrix","maximize","mesh","monetize","morph","myocardinate","negotiate","network","optimize","orchestrate","parallel task","plagiarize","pontificate","predominate","procrastinate","productivate","productize","promote","provide access to","pursue","recaptiualize","reconceptualize","redefine","re-engineer","reintermediate","reinvent","repurpose","restore","revolutionize","right-shore","scale","seize","simplify","strategize","streamline","supply","syndicate","synergize","synthesize","target","transform","transition","underwhelm","unleash","utilize","visualize","whiteboard"}
	 adjectives = {"24/7","24/365","accurate","adaptive","alternative","an expanded array of","B2B","B2C","backend","backward-compatible","best-of-breed","bleeding-edge","bricks-and-clicks","business","clicks-and-mortar","client-based","client-centered","client-centric","client-focused","cloud-based","cloud-centric","cloudified","collaborative","compelling","competitive","cooperative","corporate","cost effective","covalent","cross functional","cross-media","cross-platform","cross-unit","customer directed","customized","cutting-edge","distinctive","distributed","diverse","dynamic","e-business","economically sound","effective","efficient","elastic","emerging","empowered","enabled","end-to-end","enterprise","enterprise-wide","equity invested","error-free","ethical","excellent","exceptional","extensible","extensive","flexible","focused","frictionless","front-end","fully researched","fully tested","functional","functionalized","fungible","future-proof","global","go forward","goal-oriented","granular","high standards in","high-payoff","hyperscale","high-quality","highly efficient","holistic","impactful","inexpensive","innovative","installed base","integrated","interactive","interdependent","intermandated","interoperable","intuitive","just in time","leading-edge","leveraged","long-term high-impact","low-risk high-yield","magnetic","maintainable","market positioning","market-driven","mission-critical","multidisciplinary","multifunctional","multimedia based","next-generation","on-demand","one-to-one","open-source","optimal","orthogonal","out-of-the-box","pandemic","parallel","performance based","plug-and-play","premier","premium","principle-centered","proactive","process-centric","professional","progressive","prospective","quality","real-time","reliable","resource-sucking","resource-maximizing","resource-leveling","revolutionary","robust","scalable","seamless","stand-alone","standardized","standards compliant","state of the art","sticky","strategic","superior","sustainable","synergistic","tactical","team building","team driven","technically sound","timely","top-line","transparent","turnkey","ubiquitous","unique","user-centric","user friendly","value-added","vertical","viral","virtual","visionary","web-enabled","wireless","world-class","worldwide"}
	 nouns = {"action items","alignments","applications","architectures","bandwidth","benefits","best practices","catalysts for change","channels","clouds","collaboration and idea-sharing","communities","content","convergence","core competencies","customer service","data","deliverables","e-business","e-commerce","e-markets","e-tailers","e-services","experiences","expertise","functionalities","fungibility","growth strategies","human capital","ideas","imperatives","infomediaries","information","infrastructures","initiatives","innovation","intellectual capital","interfaces","internal or 'organic' sources","leadership","leadership skills","manufactured products","markets","materials","meta-services","methodologies","methods of empowerment","metrics","mindshare","models","networks","niches","niche markets","nosql","opportunities","'outside the box' thinking","outsourcing","paradigms","partnerships","platforms","portals","potentialities","rocess improvements","processes","products","quality vectors","relationships","resources","results","ROI","scenarios","schemas","services","solutions","sources","strategic theme areas","storage","supply chains","synergy","systems","technologies","technology","testing procedures","total linkage","users","value","vortals","web-readiness","web services","virtualization"}

	make_bs = function()
		local pretext = pretexts[math.random(#pretexts)];
		local adverb = adverbs[math.random(#adverbs)];
		local verb = verbs[math.random(#verbs)];
		local adjective = adjectives[math.random(#adjectives)];
		local noun = nouns[math.random(#nouns)];
		return pretext .. " " .. adverb .. " "  .. verb .. " " .. adjective .. " " .. noun .."."
	end

	msg = ""; 
  for i = 1, 16 do msg = msg .. "\n" .. make_bs() end; 
	--book.write(1,"BS",msg);
	--bookname = check_inventory.down("a","library",1)
	self.label(msg)
end

i=i-1
ok=write_text.down(i)   -- write countdown-value on cpu-box

if i&lt;1 then   -- end the program
  ok=write_text.down(progname)  -- write program-name on cpu-box
  ok=write_text.up("Press button to get some B***S***")  -- label button
  self.remove()  
end

--take.down("library",bookname)
--insert.forward("main",bookname)
--self.remove()</pre></div>
<p>This creates a number of sentences full of nonsense.
</p>
<h3><span id="#15_-_keypad"></span><span class="mw-headline" id=".2315_-_keypad">#15 - keypad</span></h3>
<p>How to use a keypad as keyboard for robot.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>if not s then
	s=1
	cmd = "";
end

if s==1 then
	text = read_text.backward();
	if text~="" then
		cmd = text;
		write_text.backward("")
		s=2
	end
end

if s==2 then
  local num = tonumber(cmd);
	if num then 
		say("you entered a number " .. num)
	else 
		say("you entered string '" .. cmd .. "'. ");
	end
  s = 1;
end</pre></div>
<p>The keypad writes textinput from the user onto a sign mounted at the wall behind the robot,
</p><p>The robot reads the text from that sign, and clears it.<br />
Then it tries to convert the text to a number.<br />
Depending on a successfull conversion, it announces if the text was a number or a string.
</p><p>After that, it keeps looking at the sign until the user writes something new.
</p>
<h3><span id="#16_-_greeting_robot"></span><span class="mw-headline" id=".2316_-_greeting_robot">#16 - greeting robot</span></h3>
<p>Finds and remembers nearby players.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>if not db then 
	player =""
	player_old = "" 
	db = {};
	state = 0;
end

player = find_player(5);
if player then 
  player = player[1]
	if state == 0 then move.up();state = 1 else move.down();state = 0 end
	if player~=player_old then
		if db[player] == nil then
			say("hi " .. player .. ". nice to meet you :D")
			db[player]=2;
		else
			if db[player]&gt;5 then 
				attack(player)
				say("stop annoying me " .. player .. "&#160;!!!!!")
			else
				say("hi again " .. player .. ", for the " .. db[player] .. ". time") 
			end
			db[player]=db[player]+1;
			
		end
	end
end
player_old = player</pre></div>
<h3><span id="#17_-_Smelter_robot"></span><span class="mw-headline" id=".2317_-_Smelter_robot">#17 - Smelter robot</span></h3>
<p>put cobble in chest and it will be smelted to stone in furnace.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>  insert.up("default:coal_lump","fuel")
  take.right("default:cobble")
  insert.up("default:cobble","src")
  activate.up(1)
  say("1 coal inserted in furnace, 1 cobble taken from chest, 1 cobble inserted in furnace")
self.remove()</pre></div>
<p><br />
</p>
<h3><span id="#18_-_Math-quiz"></span><span class="mw-headline" id=".2318_-_Math-quiz">#18 - Math-quiz</span></h3>
<p>Math quiz robot: answer correct and take reward from chest.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>-- QUIZ: asks math question, like ""WHAT IS 12*13&#160;?"
if not state then 
state = 1;
a=0;b=0; question = "";
function generate_question()
	a = math.random(12)+10;
	b = math.random(12)+10;
	question = "WHAT IS " .. a .."*".. b .. "&#160;? ";
	say(question)
end
generate_question()
self.listen(1)
end

speaker, msg = self.listen_msg()
msg = tonumber(msg)
if msg then 

if msg == a*b then
	say(speaker .. " ANSWERED CORRECTLY!  You get reward in chest")
  insert.up("default:apple")
  insert.up("default:pine_tree")
	generate_question()
	else
	  say("WRONG! " .. question)
	end
end
turn.left()</pre></div>
<h3><span id="#19_-_Measure_area"></span><span class="mw-headline" id=".2319_-_Measure_area">#19 - Measure area</span></h3>
<p>This robot walks the outer edge and measures the area size.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>if not area then
  self.label("")
	area = "default:glass"
	state = 0;
	width = 0;height = 0;i=0;j=0;
	step = 0;
	move.forward();turn.left()
	startpos = self.pos();
	self.spam(1)
end

pos = self.pos();
if state ~= 1 and j&gt;0 and (pos.x-startpos.x)^2&lt;1 and (pos.z-startpos.z)^2&lt;1 then
	say("finished walking around along "..j .. " edges,  " .. step .. " steps")
	if step == 2*(height+width)-4 then 
		say("area is rectangle of size " .. width .." x " .. height)
	else
		say("this area is not rectangle")
	end
	self.remove()
	state = 1
end

if state == 0 then
	turn.left();
	if read_node.forward_down()==area then  -- we can turn left and go
		j=j+1
	else 
		turn.right()
	end
	
	node = read_node.forward_down();
	if node ~= area then 
		if j == 1 then 
			height = i+1
		elseif j == 2 then 
			width = i+1
	
			--say("master, field width is " .. width .. " and field height is " .. height)
		end
		j=j+1;i=0;
		turn.right()
	else
		move.forward(); i = i+1;
		step = step+1;
	end
end</pre></div>
<h3><span id="#20_-_Roadtracker"></span><span class="mw-headline" id=".2320_-_Roadtracker">#20 - Roadtracker</span></h3>
<p>This robot follows the cobble roads.
</p>
<div class="mw-highlight mw-highlight-lang-lua mw-content-ltr" dir="ltr"><pre>--tracks road
--run then tracker.step()
if not tracker then
 self.label("")
	tracker = {};
	tracker.road = "default:cobble";

	tracker.step = function()
		if read_node.forward_down() == tracker.road then
			if not move.forward() then turn.angle(180) end
		else
			turn.left();
			if read_node.forward_down() ~= tracker.road then
				turn.right(); turn.right();
				if read_node.forward_down() ~= tracker.road then
					turn.right() 
				end
			end
		end
	end
end

tracker.step()</pre></div>
<!-- 
NewPP limit report
Cached time: 20230709182925
Cache expiry: 86400
Dynamic content: false
Complications: []
CPU time usage: 0.413 seconds
Real time usage: 0.864 seconds
Preprocessor visited node count: 433/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 26263/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key minetest_wiki:pcache:idhash:4952-0!canonical and timestamp 20230709182924 and revision id 26316
 -->
</div></div><div class="printfooter">Retrieved from "<a dir="ltr" href="http://wiki.minetest.net/index.php?title=Mods/basic_robot/tutorial&amp;oldid=26316">http://wiki.minetest.net/index.php?title=Mods/basic_robot/tutorial&amp;oldid=26316</a>"</div>
		<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/Special:Categories" title="Special:Categories">Categories</a>: <ul><li><a href="/index.php?title=Category:Pages_with_ignored_display_titles&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages with ignored display titles (page does not exist)">Pages with ignored display titles</a></li><li><a href="/index.php?title=Category:Pages_using_deprecated_source_tags&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages using deprecated source tags (page does not exist)">Pages using deprecated source tags</a></li><li><a href="/index.php?title=Category:Pages_with_syntax_highlighting_errors&amp;action=edit&amp;redlink=1" class="new" title="Category:Pages with syntax highlighting errors (page does not exist)">Pages with syntax highlighting errors</a></li><li><a href="/Category:Pages_with_broken_file_links" title="Category:Pages with broken file links">Pages with broken file links</a></li><li><a href="/Category:Mods" title="Category:Mods">Mods</a></li></ul></div></div>
	</div>
</div>

<div id="mw-navigation">
	<h2>Navigation menu</h2>
	<div id="mw-head">
		<!-- Please do not use role attribute as CSS selector, it is deprecated. -->
<nav id="p-personal" class="vector-menu" aria-labelledby="p-personal-label" role="navigation" 
	 >
	<h3 id="p-personal-label">
		<span>Personal tools</span>
	</h3>
	<!-- Please do not use the .body class, it is deprecated. -->
	<div class="body vector-menu-content">
		<!-- Please do not use the .menu class, it is deprecated. -->
		<ul class="vector-menu-content-list"><li id="pt-login"><a href="/index.php?title=Special:UserLogin&amp;returnto=Mods%2Fbasic+robot%2Ftutorial" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li></ul>
		
	</div>
</nav>


		<div id="left-navigation">
			<!-- Please do not use role attribute as CSS selector, it is deprecated. -->
<nav id="p-namespaces" class="vector-menu vector-menu-tabs vectorTabs" aria-labelledby="p-namespaces-label" role="navigation" 
	 >
	<h3 id="p-namespaces-label">
		<span>Namespaces</span>
	</h3>
	<!-- Please do not use the .body class, it is deprecated. -->
	<div class="body vector-menu-content">
		<!-- Please do not use the .menu class, it is deprecated. -->
		<ul class="vector-menu-content-list"><li id="ca-nstab-main" class="selected"><a href="/Mods/basic_robot/tutorial" title="View the content page [c]" accesskey="c">Page</a></li><li id="ca-talk" class="new"><a href="/index.php?title=Talk:Mods/basic_robot/tutorial&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t">Discussion</a></li></ul>
		
	</div>
</nav>


			<!-- Please do not use role attribute as CSS selector, it is deprecated. -->
<nav id="p-variants" class="vector-menu-empty emptyPortlet vector-menu vector-menu-dropdown vectorMenu" aria-labelledby="p-variants-label" role="navigation" 
	 >
	<input type="checkbox" class="vector-menu-checkbox vectorMenuCheckbox" aria-labelledby="p-variants-label" />
	<h3 id="p-variants-label">
		<span>Variants</span>
	</h3>
	<!-- Please do not use the .body class, it is deprecated. -->
	<div class="body vector-menu-content">
		<!-- Please do not use the .menu class, it is deprecated. -->
		<ul class="menu vector-menu-content-list"></ul>
		
	</div>
</nav>


		</div>
		<div id="right-navigation">
			<!-- Please do not use role attribute as CSS selector, it is deprecated. -->
<nav id="p-views" class="vector-menu vector-menu-tabs vectorTabs" aria-labelledby="p-views-label" role="navigation" 
	 >
	<h3 id="p-views-label">
		<span>Views</span>
	</h3>
	<!-- Please do not use the .body class, it is deprecated. -->
	<div class="body vector-menu-content">
		<!-- Please do not use the .menu class, it is deprecated. -->
		<ul class="vector-menu-content-list"><li id="ca-view" class="collapsible selected"><a href="/Mods/basic_robot/tutorial">Read</a></li><li id="ca-viewsource" class="collapsible"><a href="/index.php?title=Mods/basic_robot/tutorial&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></li><li id="ca-history" class="collapsible"><a href="/index.php?title=Mods/basic_robot/tutorial&amp;action=history" title="Past revisions of this page [h]" accesskey="h">View history</a></li></ul>
		
	</div>
</nav>


			<!-- Please do not use role attribute as CSS selector, it is deprecated. -->
<nav id="p-cactions" class="vector-menu-empty emptyPortlet vector-menu vector-menu-dropdown vectorMenu" aria-labelledby="p-cactions-label" role="navigation" 
	 >
	<input type="checkbox" class="vector-menu-checkbox vectorMenuCheckbox" aria-labelledby="p-cactions-label" />
	<h3 id="p-cactions-label">
		<span>More</span>
	</h3>
	<!-- Please do not use the .body class, it is deprecated. -->
	<div class="body vector-menu-content">
		<!-- Please do not use the .menu class, it is deprecated. -->
		<ul class="menu vector-menu-content-list"></ul>
		
	</div>
</nav>


			<div id="p-search" role="search">
	<h3 >
		<label for="searchInput">Search</label>
	</h3>
	<form action="/index.php" id="searchform">
		<div id="simpleSearch">
			<input type="search" name="search" placeholder="Search Minetest Wiki" title="Search Minetest Wiki [f]" accesskey="f" id="searchInput"/>
			<input type="hidden" name="title" value="Special:Search">
			<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/>
			<input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/>
		</div>
	</form>
</div>

		</div>
	</div>
	
<div id="mw-panel">
	<div id="p-logo" role="banner">
		<a  title="Visit the main page" class="mw-wiki-logo" href="/Main_Page"></a>
	</div>
	<!-- Please do not use role attribute as CSS selector, it is deprecated. -->
<nav id="p-navigation" class="vector-menu vector-menu-portal portal portal-first" aria-labelledby="p-navigation-label" role="navigation" 
	 >
	<h3 id="p-navigation-label">
		<span>Navigation</span>
	</h3>
	<!-- Please do not use the .body class, it is deprecated. -->
	<div class="body vector-menu-content">
		<!-- Please do not use the .menu class, it is deprecated. -->
		<ul class="vector-menu-content-list"><li id="n-mainpage-description"><a href="/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-recentchanges"><a href="/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-randompage"><a href="/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li><li id="n-help-mediawiki"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents">Help about MediaWiki</a></li></ul>
		
	</div>
</nav>


	<!-- Please do not use role attribute as CSS selector, it is deprecated. -->
<nav id="p-tb" class="vector-menu vector-menu-portal portal" aria-labelledby="p-tb-label" role="navigation" 
	 >
	<h3 id="p-tb-label">
		<span>Tools</span>
	</h3>
	<!-- Please do not use the .body class, it is deprecated. -->
	<div class="body vector-menu-content">
		<!-- Please do not use the .menu class, it is deprecated. -->
		<ul class="vector-menu-content-list"><li id="t-whatlinkshere"><a href="/Special:WhatLinksHere/Mods/basic_robot/tutorial" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="/Special:RecentChangesLinked/Mods/basic_robot/tutorial" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-specialpages"><a href="/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-print"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li><li id="t-permalink"><a href="/index.php?title=Mods/basic_robot/tutorial&amp;oldid=26316" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/index.php?title=Mods/basic_robot/tutorial&amp;action=info" title="More information about this page">Page information</a></li></ul>
		
	</div>
</nav>


	
</div>

</div>

<footer id="footer" class="mw-footer" role="contentinfo" >
	<ul id="footer-info" >
		<li id="footer-info-lastmod"> This page was last edited on 24 April 2021, at 07:59.</li>
		<li id="footer-info-copyright">Content is available under <a class="external" rel="nofollow" href="http://creativecommons.org/licenses/by-sa/3.0/">Creative Commons Attribution Share Alike</a> unless otherwise noted.</li>
	</ul>
	<ul id="footer-places" >
		<li id="footer-places-privacy"><a href="/Minetest_Wiki:Privacy_policy" title="Minetest Wiki:Privacy policy">Privacy policy</a></li>
		<li id="footer-places-about"><a href="/Minetest_Wiki:About" title="Minetest Wiki:About">About Minetest Wiki</a></li>
		<li id="footer-places-disclaimer"><a href="/Minetest_Wiki:General_disclaimer" title="Minetest Wiki:General disclaimer">Disclaimers</a></li>
	</ul>
	<ul id="footer-icons" class="noprint">
		<li id="footer-copyrightico"><a href="http://creativecommons.org/licenses/by-sa/3.0/"><img src="/resources/assets/licenses/cc-by-sa.png" alt="Creative Commons Attribution Share Alike" width="88" height="31" loading="lazy"/></a></li>
		<li id="footer-poweredbyico"><a href="https://www.mediawiki.org/"><img src="/resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/resources/assets/poweredby_mediawiki_132x47.png 1.5x, /resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a></li>
	</ul>
	<div style="clear: both;"></div>
</footer>



<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.413","walltime":"0.864","ppvisitednodes":{"value":433,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":40},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":26263,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20230709182925","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":1418});});</script></body></html>
